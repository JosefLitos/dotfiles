#!/usr/bin/bash
# sam = System APK Manager

connect() {
	[[ $1 ]] && dst=$1 || read -rp 'adb port: ' dst
	[[ $dst != *:* ]] && dst=$(
		nmap -T4 -p$dst $(
			ip a | sed -nE 's,.*inet (1([^2][^.]|2[^7])\.[0-9]+\.[0-9]+\.)[0-9]+/([0-9]+).*,\10/\3,p'
		) | grep -B4 '/tcp open' | sed -n 's,.*report for ,,p'
	):$dst
	adb connect $dst
}

screen() {
	read -rp 'scrcpy --max-fps ' fps
	[[ $fps ]] && scrcpy --max-fps $fps || scrcpy
}

packages() {
	adb shell pm list packages $1 | sed 's/package://' | sort -r | fzf -m --prompt="$2"
}

# Display a menu for disabling applications as long as there is a selection
disable() {
	packages=$(packages -e 'disable: ')
	for package in $packages; do
		adb shell pm disable-user --user 0 $package
	done
}

# Selectively enables previously disabled applications
enable() {
	packages=$(packages -d 'enable: ')
	for package in $packages; do
		adb shell pm enable --user 0 $package
	done
}

launch() {
	packages=$(packages -e 'launch: ')
	activity=$(adb shell dumpsys package |
		sed -n "s/^ \+[0-9a-f]\+ \(${packages[0]}\/[a-zA-Z.]\+\)$/\1/p" |
		fzf -m --prompt="activity: ")
	[[ $activity ]] && adb shell am start -n $activity
}

# Selectively uninstall every app onboard
uninstall() {
	# give param -d for only disabled, -e for direct uninstallation (of active/enabled apps)
	packages=$(packages $1 'uninstall: ')
	for package in $packages; do
		printf "Uninstall '%s'? [Yes/no/(k)eep data and cache]: " $package
		read -r -n 1 decision
		[[ $decision ]] && printf '\n'
		printf '\e[2A\n\e[KPackage %s uninstallation: ' $package
		case $decision in
			y | Y | "") adb uninstall --user 0 $package ;;
			k | K) adb shell cmd package uninstall -k $package ;;
		esac
	done
}

# Installs selected system apps that were uninstalled
installUninstalled() {
	sysapps=($(adb shell pm list packages -s -u))
	for sysinstalled in $(adb shell pm list packages -s); do
		declare -i c=0
		while [[ ${sysapps[$c]} != $sysinstalled ]]; do c+=1; done
		sysapps[$c]=
	done
	packages=$(
		echo "${sysapps[@]}" | sed 's/package://g;s/^ \+//;s/ \+/\n/g' | fzf -m --prompt='install: '
	)
	for package in $packages; do
		adb shell pm install-existing --user 0 $package
	done
}

help() {
	echo 'SAM - System APK Manager
This program uses ADB to manage system applications on your Android phone.
  c[onnect]   connect to a LAN device with given port
  s[creen]    capture/share screen, sound and controls
  d[isable]   provide app disabler
  e[nable]    provide disabled-app enabler
  u[ninstall] provide disabled-app uninstaller
  r[emove]    provide enabled-app uninstaller
  i[nstall]   provide uninstalled-default-app installer
  l[aunch]    launch chosen package
  h[elp]      display this help
  q[uit]      exit if run as tui'
}

(($#)) && args=1 || args=0
if [[ $1 != c* && -z "$(adb devices | sed 's/^List.*$//' 2> /dev/null)" ]]; then
	echo 'No devices are connected.
Please attach a usb cable or use "sam [-][-]c[onnect]".'
fi

while :; do
	if ((args)); then
		(($#)) || exit 0
		[[ $1 == -* ]] && opt=${1##-} || opt=$1
		shift
	else
		read -rp 'Choose action: ' -n 1 opt
	fi

	case $opt in
		c | connect) connect "$@" ;;
		s | screen) screen "$@" ;;
		d | disable) disable "$@" ;;
		e | enable) enable "$@" ;;
		u | uninstall) uninstall -d "$@" ;;
		r | remove) uninstall -e "$@" ;;
		i | install) installUninstalled "$@" ;;
		l | launch) launch "$@" ;;
		h | help) help ;;
		q | quit) exit 0 ;;
	esac
done
